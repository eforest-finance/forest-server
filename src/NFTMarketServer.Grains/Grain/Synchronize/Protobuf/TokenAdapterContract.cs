// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: token_adapter_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Contracts.TokenAdapterContract {

  /// <summary>Holder for reflection information generated from token_adapter_contract.proto</summary>
  public static partial class TokenAdapterContractReflection {

    #region Descriptor
    /// <summary>File descriptor for token_adapter_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TokenAdapterContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chx0b2tlbl9hZGFwdGVyX2NvbnRyYWN0LnByb3RvGg9hZWxmL2NvcmUucHJv",
            "dG8aEmFlbGYvb3B0aW9ucy5wcm90bxoLYWNzMTIucHJvdG8aG2dvb2dsZS9w",
            "cm90b2J1Zi9lbXB0eS5wcm90byJnCg1FeHRlcm5hbEluZm9zEigKBXZhbHVl",
            "GAEgAygLMhkuRXh0ZXJuYWxJbmZvcy5WYWx1ZUVudHJ5GiwKClZhbHVlRW50",
            "cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASKXBAoTTWFuYWdl",
            "clRva2VuQ3JlYXRlZBIOCgZzeW1ib2wYASABKAkSDgoGYW1vdW50GAIgASgJ",
            "EgwKBG1lbW8YAyABKAkSEgoKdG9rZW5fbmFtZRgEIAEoCRIUCgx0b3RhbF9z",
            "dXBwbHkYBSABKAMSEAoIZGVjaW1hbHMYBiABKAUSHQoGaXNzdWVyGAcgASgL",
            "Mg0uYWVsZi5BZGRyZXNzEhMKC2lzX2J1cm5hYmxlGAggASgIEhYKDmlzc3Vl",
            "X2NoYWluX2lkGAkgASgFEiUKDWV4dGVybmFsX2luZm8YCiABKAsyDi5FeHRl",
            "cm5hbEluZm9zEiYKEm9yaWdpbl90cmFjdGlvbl9pZBgLIAEoCzIKLmFlbGYu",
            "SGFzaBIpChJvd25lcl9tYW5hZ2VyX2xpc3QYDCABKAsyDS5hZWxmLkFkZHJl",
            "c3MSFgoOb3duZXJfY2hhaW5faWQYDSABKAUSJgoSb3duZXJfdmlydHVhbF9o",
            "YXNoGA4gASgLMgouYWVsZi5IYXNoEioKE2lzc3Vlcl9tYW5hZ2VyX2xpc3QY",
            "DyABKAsyDS5hZWxmLkFkZHJlc3MSFwoPaXNzdWVyX2NoYWluX2lkGBAgASgF",
            "EicKE2lzc3Vlcl92aXJ0dWFsX2hhc2gYESABKAsyCi5hZWxmLkhhc2gSHAoF",
            "b3duZXIYEiABKAsyDS5hZWxmLkFkZHJlc3M6BKC7GAEi0QIKF01hbmFnZXJD",
            "cmVhdGVUb2tlbklucHV0Eg4KBnN5bWJvbBgBIAEoCRITCgtzZWVkX3N5bWJv",
            "bBgCIAEoCRIOCgZhbW91bnQYAyABKAMSDAoEbWVtbxgEIAEoCRISCgp0b2tl",
            "bl9uYW1lGAUgASgJEhQKDHRvdGFsX3N1cHBseRgGIAEoAxIQCghkZWNpbWFs",
            "cxgHIAEoBRIdCgZpc3N1ZXIYCCABKAsyDS5hZWxmLkFkZHJlc3MSEwoLaXNf",
            "YnVybmFibGUYCSABKAgSJgoPbG9ja193aGl0ZV9saXN0GAogAygLMg0uYWVs",
            "Zi5BZGRyZXNzEhYKDmlzc3VlX2NoYWluX2lkGAsgASgFEiUKDWV4dGVybmFs",
            "X2luZm8YDCABKAsyDi5FeHRlcm5hbEluZm9zEhwKBW93bmVyGA0gASgLMg0u",
            "YWVsZi5BZGRyZXNzMv0CChRUb2tlbkFkYXB0ZXJDb250cmFjdBI1CgpJbml0",
            "aWFsaXplEg0uYWVsZi5BZGRyZXNzGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5",
            "IgASQQoLQ3JlYXRlVG9rZW4SGC5NYW5hZ2VyQ3JlYXRlVG9rZW5JbnB1dBoW",
            "Lmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEkcKHlNldFByb3h5QWNjb3VudENv",
            "bnRyYWN0QWRkcmVzcxINLmFlbGYuQWRkcmVzcxoWLmdvb2dsZS5wcm90b2J1",
            "Zi5FbXB0eRJOCh5HZXRQcm94eUFjY291bnRDb250cmFjdEFkZHJlc3MSFi5n",
            "b29nbGUucHJvdG9idWYuRW1wdHkaDS5hZWxmLkFkZHJlc3MiBYiJ9wEBGlLK",
            "yvYBC2FjczEyLnByb3Rvssz2AT1BRWxmLkNvbnRyYWN0cy5Ub2tlbkFkYXB0",
            "ZXJDb250cmFjdC5Ub2tlbkFkYXB0ZXJDb250cmFjdFN0YXRlQiaqAiNBRWxm",
            "LkNvbnRyYWN0cy5Ub2tlbkFkYXB0ZXJDb250cmFjdGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.Types.CoreReflection.Descriptor, global::AElf.OptionsReflection.Descriptor, global::AElf.Standards.ACS12.Acs12Reflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.TokenAdapterContract.ExternalInfos), global::AElf.Contracts.TokenAdapterContract.ExternalInfos.Parser, new[]{ "Value" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.TokenAdapterContract.ManagerTokenCreated), global::AElf.Contracts.TokenAdapterContract.ManagerTokenCreated.Parser, new[]{ "Symbol", "Amount", "Memo", "TokenName", "TotalSupply", "Decimals", "Issuer", "IsBurnable", "IssueChainId", "ExternalInfo", "OriginTractionId", "OwnerManagerList", "OwnerChainId", "OwnerVirtualHash", "IssuerManagerList", "IssuerChainId", "IssuerVirtualHash", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.TokenAdapterContract.ManagerCreateTokenInput), global::AElf.Contracts.TokenAdapterContract.ManagerCreateTokenInput.Parser, new[]{ "Symbol", "SeedSymbol", "Amount", "Memo", "TokenName", "TotalSupply", "Decimals", "Issuer", "IsBurnable", "LockWhiteList", "IssueChainId", "ExternalInfo", "Owner" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// a custom message, used as the return type of the Hello action
  /// </summary>
  public sealed partial class ExternalInfos : pb::IMessage<ExternalInfos>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExternalInfos> _parser = new pb::MessageParser<ExternalInfos>(() => new ExternalInfos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExternalInfos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.TokenAdapterContract.TokenAdapterContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExternalInfos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExternalInfos(ExternalInfos other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExternalInfos Clone() {
      return new ExternalInfos(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_value_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 10);
    private readonly pbc::MapField<string, string> value_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExternalInfos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExternalInfos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Value.Equals(other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      value_.WriteTo(output, _map_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      value_.WriteTo(ref output, _map_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_map_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExternalInfos other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _map_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            value_.AddEntriesFrom(ref input, _map_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ManagerTokenCreated : pb::IMessage<ManagerTokenCreated>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ManagerTokenCreated> _parser = new pb::MessageParser<ManagerTokenCreated>(() => new ManagerTokenCreated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ManagerTokenCreated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.TokenAdapterContract.TokenAdapterContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ManagerTokenCreated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ManagerTokenCreated(ManagerTokenCreated other) : this() {
      symbol_ = other.symbol_;
      amount_ = other.amount_;
      memo_ = other.memo_;
      tokenName_ = other.tokenName_;
      totalSupply_ = other.totalSupply_;
      decimals_ = other.decimals_;
      issuer_ = other.issuer_ != null ? other.issuer_.Clone() : null;
      isBurnable_ = other.isBurnable_;
      issueChainId_ = other.issueChainId_;
      externalInfo_ = other.externalInfo_ != null ? other.externalInfo_.Clone() : null;
      originTractionId_ = other.originTractionId_ != null ? other.originTractionId_.Clone() : null;
      ownerManagerList_ = other.ownerManagerList_ != null ? other.ownerManagerList_.Clone() : null;
      ownerChainId_ = other.ownerChainId_;
      ownerVirtualHash_ = other.ownerVirtualHash_ != null ? other.ownerVirtualHash_.Clone() : null;
      issuerManagerList_ = other.issuerManagerList_ != null ? other.issuerManagerList_.Clone() : null;
      issuerChainId_ = other.issuerChainId_;
      issuerVirtualHash_ = other.issuerVirtualHash_ != null ? other.issuerVirtualHash_.Clone() : null;
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ManagerTokenCreated Clone() {
      return new ManagerTokenCreated(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    /// <summary>
    /// The symbol of the token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private string amount_ = "";
    /// <summary>
    /// The amount of the token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Amount {
      get { return amount_; }
      set {
        amount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memo" field.</summary>
    public const int MemoFieldNumber = 3;
    private string memo_ = "";
    /// <summary>
    /// The memo.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Memo {
      get { return memo_; }
      set {
        memo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token_name" field.</summary>
    public const int TokenNameFieldNumber = 4;
    private string tokenName_ = "";
    /// <summary>
    /// The full name of the token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TokenName {
      get { return tokenName_; }
      set {
        tokenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_supply" field.</summary>
    public const int TotalSupplyFieldNumber = 5;
    private long totalSupply_;
    /// <summary>
    /// The total supply of the token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalSupply {
      get { return totalSupply_; }
      set {
        totalSupply_ = value;
      }
    }

    /// <summary>Field number for the "decimals" field.</summary>
    public const int DecimalsFieldNumber = 6;
    private int decimals_;
    /// <summary>
    /// The precision of the token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Decimals {
      get { return decimals_; }
      set {
        decimals_ = value;
      }
    }

    /// <summary>Field number for the "issuer" field.</summary>
    public const int IssuerFieldNumber = 7;
    private global::AElf.Types.Address issuer_;
    /// <summary>
    /// The address that created the token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Issuer {
      get { return issuer_; }
      set {
        issuer_ = value;
      }
    }

    /// <summary>Field number for the "is_burnable" field.</summary>
    public const int IsBurnableFieldNumber = 8;
    private bool isBurnable_;
    /// <summary>
    /// A flag indicating if this token is burnable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBurnable {
      get { return isBurnable_; }
      set {
        isBurnable_ = value;
      }
    }

    /// <summary>Field number for the "issue_chain_id" field.</summary>
    public const int IssueChainIdFieldNumber = 9;
    private int issueChainId_;
    /// <summary>
    /// The chain id of the token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int IssueChainId {
      get { return issueChainId_; }
      set {
        issueChainId_ = value;
      }
    }

    /// <summary>Field number for the "external_info" field.</summary>
    public const int ExternalInfoFieldNumber = 10;
    private global::AElf.Contracts.TokenAdapterContract.ExternalInfos externalInfo_;
    /// <summary>
    /// The external information of the token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Contracts.TokenAdapterContract.ExternalInfos ExternalInfo {
      get { return externalInfo_; }
      set {
        externalInfo_ = value;
      }
    }

    /// <summary>Field number for the "origin_traction_id" field.</summary>
    public const int OriginTractionIdFieldNumber = 11;
    private global::AElf.Types.Hash originTractionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash OriginTractionId {
      get { return originTractionId_; }
      set {
        originTractionId_ = value;
      }
    }

    /// <summary>Field number for the "owner_manager_list" field.</summary>
    public const int OwnerManagerListFieldNumber = 12;
    private global::AElf.Types.Address ownerManagerList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address OwnerManagerList {
      get { return ownerManagerList_; }
      set {
        ownerManagerList_ = value;
      }
    }

    /// <summary>Field number for the "owner_chain_id" field.</summary>
    public const int OwnerChainIdFieldNumber = 13;
    private int ownerChainId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OwnerChainId {
      get { return ownerChainId_; }
      set {
        ownerChainId_ = value;
      }
    }

    /// <summary>Field number for the "owner_virtual_hash" field.</summary>
    public const int OwnerVirtualHashFieldNumber = 14;
    private global::AElf.Types.Hash ownerVirtualHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash OwnerVirtualHash {
      get { return ownerVirtualHash_; }
      set {
        ownerVirtualHash_ = value;
      }
    }

    /// <summary>Field number for the "issuer_manager_list" field.</summary>
    public const int IssuerManagerListFieldNumber = 15;
    private global::AElf.Types.Address issuerManagerList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address IssuerManagerList {
      get { return issuerManagerList_; }
      set {
        issuerManagerList_ = value;
      }
    }

    /// <summary>Field number for the "issuer_chain_id" field.</summary>
    public const int IssuerChainIdFieldNumber = 16;
    private int issuerChainId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int IssuerChainId {
      get { return issuerChainId_; }
      set {
        issuerChainId_ = value;
      }
    }

    /// <summary>Field number for the "issuer_virtual_hash" field.</summary>
    public const int IssuerVirtualHashFieldNumber = 17;
    private global::AElf.Types.Hash issuerVirtualHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash IssuerVirtualHash {
      get { return issuerVirtualHash_; }
      set {
        issuerVirtualHash_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 18;
    private global::AElf.Types.Address owner_;
    /// <summary>
    /// The address that owns the token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ManagerTokenCreated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ManagerTokenCreated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Amount != other.Amount) return false;
      if (Memo != other.Memo) return false;
      if (TokenName != other.TokenName) return false;
      if (TotalSupply != other.TotalSupply) return false;
      if (Decimals != other.Decimals) return false;
      if (!object.Equals(Issuer, other.Issuer)) return false;
      if (IsBurnable != other.IsBurnable) return false;
      if (IssueChainId != other.IssueChainId) return false;
      if (!object.Equals(ExternalInfo, other.ExternalInfo)) return false;
      if (!object.Equals(OriginTractionId, other.OriginTractionId)) return false;
      if (!object.Equals(OwnerManagerList, other.OwnerManagerList)) return false;
      if (OwnerChainId != other.OwnerChainId) return false;
      if (!object.Equals(OwnerVirtualHash, other.OwnerVirtualHash)) return false;
      if (!object.Equals(IssuerManagerList, other.IssuerManagerList)) return false;
      if (IssuerChainId != other.IssuerChainId) return false;
      if (!object.Equals(IssuerVirtualHash, other.IssuerVirtualHash)) return false;
      if (!object.Equals(Owner, other.Owner)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Amount.Length != 0) hash ^= Amount.GetHashCode();
      if (Memo.Length != 0) hash ^= Memo.GetHashCode();
      if (TokenName.Length != 0) hash ^= TokenName.GetHashCode();
      if (TotalSupply != 0L) hash ^= TotalSupply.GetHashCode();
      if (Decimals != 0) hash ^= Decimals.GetHashCode();
      if (issuer_ != null) hash ^= Issuer.GetHashCode();
      if (IsBurnable != false) hash ^= IsBurnable.GetHashCode();
      if (IssueChainId != 0) hash ^= IssueChainId.GetHashCode();
      if (externalInfo_ != null) hash ^= ExternalInfo.GetHashCode();
      if (originTractionId_ != null) hash ^= OriginTractionId.GetHashCode();
      if (ownerManagerList_ != null) hash ^= OwnerManagerList.GetHashCode();
      if (OwnerChainId != 0) hash ^= OwnerChainId.GetHashCode();
      if (ownerVirtualHash_ != null) hash ^= OwnerVirtualHash.GetHashCode();
      if (issuerManagerList_ != null) hash ^= IssuerManagerList.GetHashCode();
      if (IssuerChainId != 0) hash ^= IssuerChainId.GetHashCode();
      if (issuerVirtualHash_ != null) hash ^= IssuerVirtualHash.GetHashCode();
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Amount.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Amount);
      }
      if (Memo.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Memo);
      }
      if (TokenName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TokenName);
      }
      if (TotalSupply != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalSupply);
      }
      if (Decimals != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Decimals);
      }
      if (issuer_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Issuer);
      }
      if (IsBurnable != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsBurnable);
      }
      if (IssueChainId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(IssueChainId);
      }
      if (externalInfo_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ExternalInfo);
      }
      if (originTractionId_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(OriginTractionId);
      }
      if (ownerManagerList_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(OwnerManagerList);
      }
      if (OwnerChainId != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(OwnerChainId);
      }
      if (ownerVirtualHash_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(OwnerVirtualHash);
      }
      if (issuerManagerList_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(IssuerManagerList);
      }
      if (IssuerChainId != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(IssuerChainId);
      }
      if (issuerVirtualHash_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(IssuerVirtualHash);
      }
      if (owner_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Amount.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Amount);
      }
      if (Memo.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Memo);
      }
      if (TokenName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TokenName);
      }
      if (TotalSupply != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalSupply);
      }
      if (Decimals != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Decimals);
      }
      if (issuer_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Issuer);
      }
      if (IsBurnable != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsBurnable);
      }
      if (IssueChainId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(IssueChainId);
      }
      if (externalInfo_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ExternalInfo);
      }
      if (originTractionId_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(OriginTractionId);
      }
      if (ownerManagerList_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(OwnerManagerList);
      }
      if (OwnerChainId != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(OwnerChainId);
      }
      if (ownerVirtualHash_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(OwnerVirtualHash);
      }
      if (issuerManagerList_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(IssuerManagerList);
      }
      if (IssuerChainId != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(IssuerChainId);
      }
      if (issuerVirtualHash_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(IssuerVirtualHash);
      }
      if (owner_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Amount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Amount);
      }
      if (Memo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Memo);
      }
      if (TokenName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TokenName);
      }
      if (TotalSupply != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalSupply);
      }
      if (Decimals != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Decimals);
      }
      if (issuer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Issuer);
      }
      if (IsBurnable != false) {
        size += 1 + 1;
      }
      if (IssueChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IssueChainId);
      }
      if (externalInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExternalInfo);
      }
      if (originTractionId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginTractionId);
      }
      if (ownerManagerList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OwnerManagerList);
      }
      if (OwnerChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OwnerChainId);
      }
      if (ownerVirtualHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OwnerVirtualHash);
      }
      if (issuerManagerList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IssuerManagerList);
      }
      if (IssuerChainId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(IssuerChainId);
      }
      if (issuerVirtualHash_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IssuerVirtualHash);
      }
      if (owner_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ManagerTokenCreated other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Amount.Length != 0) {
        Amount = other.Amount;
      }
      if (other.Memo.Length != 0) {
        Memo = other.Memo;
      }
      if (other.TokenName.Length != 0) {
        TokenName = other.TokenName;
      }
      if (other.TotalSupply != 0L) {
        TotalSupply = other.TotalSupply;
      }
      if (other.Decimals != 0) {
        Decimals = other.Decimals;
      }
      if (other.issuer_ != null) {
        if (issuer_ == null) {
          Issuer = new global::AElf.Types.Address();
        }
        Issuer.MergeFrom(other.Issuer);
      }
      if (other.IsBurnable != false) {
        IsBurnable = other.IsBurnable;
      }
      if (other.IssueChainId != 0) {
        IssueChainId = other.IssueChainId;
      }
      if (other.externalInfo_ != null) {
        if (externalInfo_ == null) {
          ExternalInfo = new global::AElf.Contracts.TokenAdapterContract.ExternalInfos();
        }
        ExternalInfo.MergeFrom(other.ExternalInfo);
      }
      if (other.originTractionId_ != null) {
        if (originTractionId_ == null) {
          OriginTractionId = new global::AElf.Types.Hash();
        }
        OriginTractionId.MergeFrom(other.OriginTractionId);
      }
      if (other.ownerManagerList_ != null) {
        if (ownerManagerList_ == null) {
          OwnerManagerList = new global::AElf.Types.Address();
        }
        OwnerManagerList.MergeFrom(other.OwnerManagerList);
      }
      if (other.OwnerChainId != 0) {
        OwnerChainId = other.OwnerChainId;
      }
      if (other.ownerVirtualHash_ != null) {
        if (ownerVirtualHash_ == null) {
          OwnerVirtualHash = new global::AElf.Types.Hash();
        }
        OwnerVirtualHash.MergeFrom(other.OwnerVirtualHash);
      }
      if (other.issuerManagerList_ != null) {
        if (issuerManagerList_ == null) {
          IssuerManagerList = new global::AElf.Types.Address();
        }
        IssuerManagerList.MergeFrom(other.IssuerManagerList);
      }
      if (other.IssuerChainId != 0) {
        IssuerChainId = other.IssuerChainId;
      }
      if (other.issuerVirtualHash_ != null) {
        if (issuerVirtualHash_ == null) {
          IssuerVirtualHash = new global::AElf.Types.Hash();
        }
        IssuerVirtualHash.MergeFrom(other.IssuerVirtualHash);
      }
      if (other.owner_ != null) {
        if (owner_ == null) {
          Owner = new global::AElf.Types.Address();
        }
        Owner.MergeFrom(other.Owner);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            Amount = input.ReadString();
            break;
          }
          case 26: {
            Memo = input.ReadString();
            break;
          }
          case 34: {
            TokenName = input.ReadString();
            break;
          }
          case 40: {
            TotalSupply = input.ReadInt64();
            break;
          }
          case 48: {
            Decimals = input.ReadInt32();
            break;
          }
          case 58: {
            if (issuer_ == null) {
              Issuer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Issuer);
            break;
          }
          case 64: {
            IsBurnable = input.ReadBool();
            break;
          }
          case 72: {
            IssueChainId = input.ReadInt32();
            break;
          }
          case 82: {
            if (externalInfo_ == null) {
              ExternalInfo = new global::AElf.Contracts.TokenAdapterContract.ExternalInfos();
            }
            input.ReadMessage(ExternalInfo);
            break;
          }
          case 90: {
            if (originTractionId_ == null) {
              OriginTractionId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(OriginTractionId);
            break;
          }
          case 98: {
            if (ownerManagerList_ == null) {
              OwnerManagerList = new global::AElf.Types.Address();
            }
            input.ReadMessage(OwnerManagerList);
            break;
          }
          case 104: {
            OwnerChainId = input.ReadInt32();
            break;
          }
          case 114: {
            if (ownerVirtualHash_ == null) {
              OwnerVirtualHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(OwnerVirtualHash);
            break;
          }
          case 122: {
            if (issuerManagerList_ == null) {
              IssuerManagerList = new global::AElf.Types.Address();
            }
            input.ReadMessage(IssuerManagerList);
            break;
          }
          case 128: {
            IssuerChainId = input.ReadInt32();
            break;
          }
          case 138: {
            if (issuerVirtualHash_ == null) {
              IssuerVirtualHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(IssuerVirtualHash);
            break;
          }
          case 146: {
            if (owner_ == null) {
              Owner = new global::AElf.Types.Address();
            }
            input.ReadMessage(Owner);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            Amount = input.ReadString();
            break;
          }
          case 26: {
            Memo = input.ReadString();
            break;
          }
          case 34: {
            TokenName = input.ReadString();
            break;
          }
          case 40: {
            TotalSupply = input.ReadInt64();
            break;
          }
          case 48: {
            Decimals = input.ReadInt32();
            break;
          }
          case 58: {
            if (issuer_ == null) {
              Issuer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Issuer);
            break;
          }
          case 64: {
            IsBurnable = input.ReadBool();
            break;
          }
          case 72: {
            IssueChainId = input.ReadInt32();
            break;
          }
          case 82: {
            if (externalInfo_ == null) {
              ExternalInfo = new global::AElf.Contracts.TokenAdapterContract.ExternalInfos();
            }
            input.ReadMessage(ExternalInfo);
            break;
          }
          case 90: {
            if (originTractionId_ == null) {
              OriginTractionId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(OriginTractionId);
            break;
          }
          case 98: {
            if (ownerManagerList_ == null) {
              OwnerManagerList = new global::AElf.Types.Address();
            }
            input.ReadMessage(OwnerManagerList);
            break;
          }
          case 104: {
            OwnerChainId = input.ReadInt32();
            break;
          }
          case 114: {
            if (ownerVirtualHash_ == null) {
              OwnerVirtualHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(OwnerVirtualHash);
            break;
          }
          case 122: {
            if (issuerManagerList_ == null) {
              IssuerManagerList = new global::AElf.Types.Address();
            }
            input.ReadMessage(IssuerManagerList);
            break;
          }
          case 128: {
            IssuerChainId = input.ReadInt32();
            break;
          }
          case 138: {
            if (issuerVirtualHash_ == null) {
              IssuerVirtualHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(IssuerVirtualHash);
            break;
          }
          case 146: {
            if (owner_ == null) {
              Owner = new global::AElf.Types.Address();
            }
            input.ReadMessage(Owner);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ManagerCreateTokenInput : pb::IMessage<ManagerCreateTokenInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ManagerCreateTokenInput> _parser = new pb::MessageParser<ManagerCreateTokenInput>(() => new ManagerCreateTokenInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ManagerCreateTokenInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.TokenAdapterContract.TokenAdapterContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ManagerCreateTokenInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ManagerCreateTokenInput(ManagerCreateTokenInput other) : this() {
      symbol_ = other.symbol_;
      seedSymbol_ = other.seedSymbol_;
      amount_ = other.amount_;
      memo_ = other.memo_;
      tokenName_ = other.tokenName_;
      totalSupply_ = other.totalSupply_;
      decimals_ = other.decimals_;
      issuer_ = other.issuer_ != null ? other.issuer_.Clone() : null;
      isBurnable_ = other.isBurnable_;
      lockWhiteList_ = other.lockWhiteList_.Clone();
      issueChainId_ = other.issueChainId_;
      externalInfo_ = other.externalInfo_ != null ? other.externalInfo_.Clone() : null;
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ManagerCreateTokenInput Clone() {
      return new ManagerCreateTokenInput(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    /// <summary>
    /// The symbol of the token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seed_symbol" field.</summary>
    public const int SeedSymbolFieldNumber = 2;
    private string seedSymbol_ = "";
    /// <summary>
    /// The token amount to issue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SeedSymbol {
      get { return seedSymbol_; }
      set {
        seedSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    /// <summary>
    /// The token amount to issue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "memo" field.</summary>
    public const int MemoFieldNumber = 4;
    private string memo_ = "";
    /// <summary>
    /// The memo.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Memo {
      get { return memo_; }
      set {
        memo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token_name" field.</summary>
    public const int TokenNameFieldNumber = 5;
    private string tokenName_ = "";
    /// <summary>
    /// The full name of the token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TokenName {
      get { return tokenName_; }
      set {
        tokenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_supply" field.</summary>
    public const int TotalSupplyFieldNumber = 6;
    private long totalSupply_;
    /// <summary>
    /// The total supply of the token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalSupply {
      get { return totalSupply_; }
      set {
        totalSupply_ = value;
      }
    }

    /// <summary>Field number for the "decimals" field.</summary>
    public const int DecimalsFieldNumber = 7;
    private int decimals_;
    /// <summary>
    /// The precision of the token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Decimals {
      get { return decimals_; }
      set {
        decimals_ = value;
      }
    }

    /// <summary>Field number for the "issuer" field.</summary>
    public const int IssuerFieldNumber = 8;
    private global::AElf.Types.Address issuer_;
    /// <summary>
    /// The address that created the token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Issuer {
      get { return issuer_; }
      set {
        issuer_ = value;
      }
    }

    /// <summary>Field number for the "is_burnable" field.</summary>
    public const int IsBurnableFieldNumber = 9;
    private bool isBurnable_;
    /// <summary>
    /// A flag indicating if this token is burnable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBurnable {
      get { return isBurnable_; }
      set {
        isBurnable_ = value;
      }
    }

    /// <summary>Field number for the "lock_white_list" field.</summary>
    public const int LockWhiteListFieldNumber = 10;
    private static readonly pb::FieldCodec<global::AElf.Types.Address> _repeated_lockWhiteList_codec
        = pb::FieldCodec.ForMessage(82, global::AElf.Types.Address.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Address> lockWhiteList_ = new pbc::RepeatedField<global::AElf.Types.Address>();
    /// <summary>
    /// A whitelist address list used to lock tokens.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AElf.Types.Address> LockWhiteList {
      get { return lockWhiteList_; }
    }

    /// <summary>Field number for the "issue_chain_id" field.</summary>
    public const int IssueChainIdFieldNumber = 11;
    private int issueChainId_;
    /// <summary>
    /// The chain id of the token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int IssueChainId {
      get { return issueChainId_; }
      set {
        issueChainId_ = value;
      }
    }

    /// <summary>Field number for the "external_info" field.</summary>
    public const int ExternalInfoFieldNumber = 12;
    private global::AElf.Contracts.TokenAdapterContract.ExternalInfos externalInfo_;
    /// <summary>
    /// The external information of the token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Contracts.TokenAdapterContract.ExternalInfos ExternalInfo {
      get { return externalInfo_; }
      set {
        externalInfo_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 13;
    private global::AElf.Types.Address owner_;
    /// <summary>
    /// The address that owns the token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ManagerCreateTokenInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ManagerCreateTokenInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (SeedSymbol != other.SeedSymbol) return false;
      if (Amount != other.Amount) return false;
      if (Memo != other.Memo) return false;
      if (TokenName != other.TokenName) return false;
      if (TotalSupply != other.TotalSupply) return false;
      if (Decimals != other.Decimals) return false;
      if (!object.Equals(Issuer, other.Issuer)) return false;
      if (IsBurnable != other.IsBurnable) return false;
      if(!lockWhiteList_.Equals(other.lockWhiteList_)) return false;
      if (IssueChainId != other.IssueChainId) return false;
      if (!object.Equals(ExternalInfo, other.ExternalInfo)) return false;
      if (!object.Equals(Owner, other.Owner)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (SeedSymbol.Length != 0) hash ^= SeedSymbol.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Memo.Length != 0) hash ^= Memo.GetHashCode();
      if (TokenName.Length != 0) hash ^= TokenName.GetHashCode();
      if (TotalSupply != 0L) hash ^= TotalSupply.GetHashCode();
      if (Decimals != 0) hash ^= Decimals.GetHashCode();
      if (issuer_ != null) hash ^= Issuer.GetHashCode();
      if (IsBurnable != false) hash ^= IsBurnable.GetHashCode();
      hash ^= lockWhiteList_.GetHashCode();
      if (IssueChainId != 0) hash ^= IssueChainId.GetHashCode();
      if (externalInfo_ != null) hash ^= ExternalInfo.GetHashCode();
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (SeedSymbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SeedSymbol);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (Memo.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Memo);
      }
      if (TokenName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TokenName);
      }
      if (TotalSupply != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalSupply);
      }
      if (Decimals != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Decimals);
      }
      if (issuer_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Issuer);
      }
      if (IsBurnable != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsBurnable);
      }
      lockWhiteList_.WriteTo(output, _repeated_lockWhiteList_codec);
      if (IssueChainId != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(IssueChainId);
      }
      if (externalInfo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ExternalInfo);
      }
      if (owner_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (SeedSymbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SeedSymbol);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (Memo.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Memo);
      }
      if (TokenName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TokenName);
      }
      if (TotalSupply != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalSupply);
      }
      if (Decimals != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Decimals);
      }
      if (issuer_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Issuer);
      }
      if (IsBurnable != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsBurnable);
      }
      lockWhiteList_.WriteTo(ref output, _repeated_lockWhiteList_codec);
      if (IssueChainId != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(IssueChainId);
      }
      if (externalInfo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ExternalInfo);
      }
      if (owner_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (SeedSymbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeedSymbol);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Memo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Memo);
      }
      if (TokenName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TokenName);
      }
      if (TotalSupply != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalSupply);
      }
      if (Decimals != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Decimals);
      }
      if (issuer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Issuer);
      }
      if (IsBurnable != false) {
        size += 1 + 1;
      }
      size += lockWhiteList_.CalculateSize(_repeated_lockWhiteList_codec);
      if (IssueChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IssueChainId);
      }
      if (externalInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExternalInfo);
      }
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ManagerCreateTokenInput other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.SeedSymbol.Length != 0) {
        SeedSymbol = other.SeedSymbol;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Memo.Length != 0) {
        Memo = other.Memo;
      }
      if (other.TokenName.Length != 0) {
        TokenName = other.TokenName;
      }
      if (other.TotalSupply != 0L) {
        TotalSupply = other.TotalSupply;
      }
      if (other.Decimals != 0) {
        Decimals = other.Decimals;
      }
      if (other.issuer_ != null) {
        if (issuer_ == null) {
          Issuer = new global::AElf.Types.Address();
        }
        Issuer.MergeFrom(other.Issuer);
      }
      if (other.IsBurnable != false) {
        IsBurnable = other.IsBurnable;
      }
      lockWhiteList_.Add(other.lockWhiteList_);
      if (other.IssueChainId != 0) {
        IssueChainId = other.IssueChainId;
      }
      if (other.externalInfo_ != null) {
        if (externalInfo_ == null) {
          ExternalInfo = new global::AElf.Contracts.TokenAdapterContract.ExternalInfos();
        }
        ExternalInfo.MergeFrom(other.ExternalInfo);
      }
      if (other.owner_ != null) {
        if (owner_ == null) {
          Owner = new global::AElf.Types.Address();
        }
        Owner.MergeFrom(other.Owner);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            SeedSymbol = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
          case 34: {
            Memo = input.ReadString();
            break;
          }
          case 42: {
            TokenName = input.ReadString();
            break;
          }
          case 48: {
            TotalSupply = input.ReadInt64();
            break;
          }
          case 56: {
            Decimals = input.ReadInt32();
            break;
          }
          case 66: {
            if (issuer_ == null) {
              Issuer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Issuer);
            break;
          }
          case 72: {
            IsBurnable = input.ReadBool();
            break;
          }
          case 82: {
            lockWhiteList_.AddEntriesFrom(input, _repeated_lockWhiteList_codec);
            break;
          }
          case 88: {
            IssueChainId = input.ReadInt32();
            break;
          }
          case 98: {
            if (externalInfo_ == null) {
              ExternalInfo = new global::AElf.Contracts.TokenAdapterContract.ExternalInfos();
            }
            input.ReadMessage(ExternalInfo);
            break;
          }
          case 106: {
            if (owner_ == null) {
              Owner = new global::AElf.Types.Address();
            }
            input.ReadMessage(Owner);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            SeedSymbol = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
          case 34: {
            Memo = input.ReadString();
            break;
          }
          case 42: {
            TokenName = input.ReadString();
            break;
          }
          case 48: {
            TotalSupply = input.ReadInt64();
            break;
          }
          case 56: {
            Decimals = input.ReadInt32();
            break;
          }
          case 66: {
            if (issuer_ == null) {
              Issuer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Issuer);
            break;
          }
          case 72: {
            IsBurnable = input.ReadBool();
            break;
          }
          case 82: {
            lockWhiteList_.AddEntriesFrom(ref input, _repeated_lockWhiteList_codec);
            break;
          }
          case 88: {
            IssueChainId = input.ReadInt32();
            break;
          }
          case 98: {
            if (externalInfo_ == null) {
              ExternalInfo = new global::AElf.Contracts.TokenAdapterContract.ExternalInfos();
            }
            input.ReadMessage(ExternalInfo);
            break;
          }
          case 106: {
            if (owner_ == null) {
              Owner = new global::AElf.Types.Address();
            }
            input.ReadMessage(Owner);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
