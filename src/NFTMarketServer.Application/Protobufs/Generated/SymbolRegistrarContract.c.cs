// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: symbol_registrar_contract.proto
// </auto-generated>
// Original file comments:
// the version of the language, use proto3 for contracts
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace Forest.Contracts.SymbolRegistrar {

  #region Events
  public partial class SeedCreated : aelf::IEvent<SeedCreated>
  {
    public global::System.Collections.Generic.IEnumerable<SeedCreated> GetIndexed()
    {
      return new List<SeedCreated>
      {
      };
    }

    public SeedCreated GetNonIndexed()
    {
      return new SeedCreated
      {
        Symbol = Symbol,
        OwnedSymbol = OwnedSymbol,
        ExpireTime = ExpireTime,
        SeedType = SeedType,
        To = To,
        ImageUrl = ImageUrl,
      };
    }
  }

  public partial class SeedsPriceChanged : aelf::IEvent<SeedsPriceChanged>
  {
    public global::System.Collections.Generic.IEnumerable<SeedsPriceChanged> GetIndexed()
    {
      return new List<SeedsPriceChanged>
      {
      };
    }

    public SeedsPriceChanged GetNonIndexed()
    {
      return new SeedsPriceChanged
      {
        FtPriceList = FtPriceList,
        NftPriceList = NftPriceList,
      };
    }
  }

  public partial class UniqueSeedsExternalPriceChanged : aelf::IEvent<UniqueSeedsExternalPriceChanged>
  {
    public global::System.Collections.Generic.IEnumerable<UniqueSeedsExternalPriceChanged> GetIndexed()
    {
      return new List<UniqueSeedsExternalPriceChanged>
      {
      };
    }

    public UniqueSeedsExternalPriceChanged GetNonIndexed()
    {
      return new UniqueSeedsExternalPriceChanged
      {
        FtPriceList = FtPriceList,
        NftPriceList = NftPriceList,
      };
    }
  }

  public partial class SpecialSeedAdded : aelf::IEvent<SpecialSeedAdded>
  {
    public global::System.Collections.Generic.IEnumerable<SpecialSeedAdded> GetIndexed()
    {
      return new List<SpecialSeedAdded>
      {
      };
    }

    public SpecialSeedAdded GetNonIndexed()
    {
      return new SpecialSeedAdded
      {
        AddList = AddList,
      };
    }
  }

  public partial class SpecialSeedRemoved : aelf::IEvent<SpecialSeedRemoved>
  {
    public global::System.Collections.Generic.IEnumerable<SpecialSeedRemoved> GetIndexed()
    {
      return new List<SpecialSeedRemoved>
      {
      };
    }

    public SpecialSeedRemoved GetNonIndexed()
    {
      return new SpecialSeedRemoved
      {
        RemoveList = RemoveList,
      };
    }
  }

  public partial class Bought : aelf::IEvent<Bought>
  {
    public global::System.Collections.Generic.IEnumerable<Bought> GetIndexed()
    {
      return new List<Bought>
      {
      };
    }

    public Bought GetNonIndexed()
    {
      return new Bought
      {
        Buyer = Buyer,
        Symbol = Symbol,
        Price = Price,
      };
    }
  }

  public partial class SeedRenewed : aelf::IEvent<SeedRenewed>
  {
    public global::System.Collections.Generic.IEnumerable<SeedRenewed> GetIndexed()
    {
      return new List<SeedRenewed>
      {
      };
    }

    public SeedRenewed GetNonIndexed()
    {
      return new SeedRenewed
      {
        Buyer = Buyer,
        Symbol = Symbol,
        SeedSymbol = SeedSymbol,
        ExpTime = ExpTime,
        Price = Price,
        OriginalExpTime = OriginalExpTime,
        SeedType = SeedType,
        RenewType = RenewType,
        ChainId = ChainId,
      };
    }
  }

  public partial class SaleControllerAdded : aelf::IEvent<SaleControllerAdded>
  {
    public global::System.Collections.Generic.IEnumerable<SaleControllerAdded> GetIndexed()
    {
      return new List<SaleControllerAdded>
      {
      };
    }

    public SaleControllerAdded GetNonIndexed()
    {
      return new SaleControllerAdded
      {
        Addresses = Addresses,
      };
    }
  }

  public partial class SaleControllerRemoved : aelf::IEvent<SaleControllerRemoved>
  {
    public global::System.Collections.Generic.IEnumerable<SaleControllerRemoved> GetIndexed()
    {
      return new List<SaleControllerRemoved>
      {
      };
    }

    public SaleControllerRemoved GetNonIndexed()
    {
      return new SaleControllerRemoved
      {
        Addresses = Addresses,
      };
    }
  }

  public partial class SeedExpirationConfigChanged : aelf::IEvent<SeedExpirationConfigChanged>
  {
    public global::System.Collections.Generic.IEnumerable<SeedExpirationConfigChanged> GetIndexed()
    {
      return new List<SeedExpirationConfigChanged>
      {
      };
    }

    public SeedExpirationConfigChanged GetNonIndexed()
    {
      return new SeedExpirationConfigChanged
      {
        SeedExpirationConfig = SeedExpirationConfig,
      };
    }
  }

  public partial class IssueChainAdded : aelf::IEvent<IssueChainAdded>
  {
    public global::System.Collections.Generic.IEnumerable<IssueChainAdded> GetIndexed()
    {
      return new List<IssueChainAdded>
      {
      };
    }

    public IssueChainAdded GetNonIndexed()
    {
      return new IssueChainAdded
      {
        IssueChainList = IssueChainList,
      };
    }
  }

  public partial class IssueChainRemoved : aelf::IEvent<IssueChainRemoved>
  {
    public global::System.Collections.Generic.IEnumerable<IssueChainRemoved> GetIndexed()
    {
      return new List<IssueChainRemoved>
      {
      };
    }

    public IssueChainRemoved GetNonIndexed()
    {
      return new IssueChainRemoved
      {
        IssueChainList = IssueChainList,
      };
    }
  }

  #endregion
  /// <summary>
  /// the contract definition: a gRPC service definition.
  /// </summary>
  public static partial class SymbolRegistrarContractContainer
  {
    static readonly string __ServiceName = "SymbolRegistrarContract";

    #region Marshallers
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.InitializeInput> __Marshaller_InitializeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.InitializeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.CreateSeedInput> __Marshaller_CreateSeedInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.CreateSeedInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.BuyInput> __Marshaller_BuyInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.BuyInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.RegularSeedRenewInput> __Marshaller_RegularSeedRenewInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.RegularSeedRenewInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.SpecialSeedRenewInput> __Marshaller_SpecialSeedRenewInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.SpecialSeedRenewInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.BidFinishSeedRenewInput> __Marshaller_BidFinishSeedRenewInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.BidFinishSeedRenewInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.SpecialSeedList> __Marshaller_SpecialSeedList = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.SpecialSeedList.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.UniqueSeedList> __Marshaller_UniqueSeedList = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.UniqueSeedList.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.RemoveSpecialSeedInput> __Marshaller_RemoveSpecialSeedInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.RemoveSpecialSeedInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Address> __Marshaller_aelf_Address = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Address.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Int64Value> __Marshaller_google_protobuf_Int64Value = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Int64Value.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.SeedsPriceInput> __Marshaller_SeedsPriceInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.SeedsPriceInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.UniqueSeedsExternalPriceInput> __Marshaller_UniqueSeedsExternalPriceInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.UniqueSeedsExternalPriceInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.AuctionConfig> __Marshaller_AuctionConfig = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.AuctionConfig.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.AddSaleControllerInput> __Marshaller_AddSaleControllerInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.AddSaleControllerInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.RemoveSaleControllerInput> __Marshaller_RemoveSaleControllerInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.RemoveSaleControllerInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.SeedExpirationConfig> __Marshaller_SeedExpirationConfig = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.SeedExpirationConfig.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.StringValue> __Marshaller_google_protobuf_StringValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.StringValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.IssueChainList> __Marshaller_IssueChainList = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.IssueChainList.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.GetSeedsPriceOutput> __Marshaller_GetSeedsPriceOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.GetSeedsPriceOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.GetUniqueSeedsExternalPriceOutput> __Marshaller_GetUniqueSeedsExternalPriceOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.GetUniqueSeedsExternalPriceOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.SpecialSeed> __Marshaller_SpecialSeed = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.SpecialSeed.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Forest.Contracts.SymbolRegistrar.ControllerList> __Marshaller_ControllerList = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Forest.Contracts.SymbolRegistrar.ControllerList.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::Forest.Contracts.SymbolRegistrar.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Initialize = new aelf::Method<global::Forest.Contracts.SymbolRegistrar.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Initialize",
        __Marshaller_InitializeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Forest.Contracts.SymbolRegistrar.CreateSeedInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CreateSeed = new aelf::Method<global::Forest.Contracts.SymbolRegistrar.CreateSeedInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "CreateSeed",
        __Marshaller_CreateSeedInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Forest.Contracts.SymbolRegistrar.BuyInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Buy = new aelf::Method<global::Forest.Contracts.SymbolRegistrar.BuyInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Buy",
        __Marshaller_BuyInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Forest.Contracts.SymbolRegistrar.RegularSeedRenewInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RegularSeedRenew = new aelf::Method<global::Forest.Contracts.SymbolRegistrar.RegularSeedRenewInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RegularSeedRenew",
        __Marshaller_RegularSeedRenewInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Forest.Contracts.SymbolRegistrar.SpecialSeedRenewInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SpecialSeedRenew = new aelf::Method<global::Forest.Contracts.SymbolRegistrar.SpecialSeedRenewInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SpecialSeedRenew",
        __Marshaller_SpecialSeedRenewInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Forest.Contracts.SymbolRegistrar.BidFinishSeedRenewInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_BidFinishSeedRenew = new aelf::Method<global::Forest.Contracts.SymbolRegistrar.BidFinishSeedRenewInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "BidFinishSeedRenew",
        __Marshaller_BidFinishSeedRenewInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Forest.Contracts.SymbolRegistrar.SpecialSeedList, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddSpecialSeeds = new aelf::Method<global::Forest.Contracts.SymbolRegistrar.SpecialSeedList, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AddSpecialSeeds",
        __Marshaller_SpecialSeedList,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Forest.Contracts.SymbolRegistrar.UniqueSeedList, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddUniqueSeeds = new aelf::Method<global::Forest.Contracts.SymbolRegistrar.UniqueSeedList, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AddUniqueSeeds",
        __Marshaller_UniqueSeedList,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Forest.Contracts.SymbolRegistrar.RemoveSpecialSeedInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveSpecialSeeds = new aelf::Method<global::Forest.Contracts.SymbolRegistrar.RemoveSpecialSeedInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RemoveSpecialSeeds",
        __Marshaller_RemoveSpecialSeedInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetAdmin = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetAdmin",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetAssociateOrganization = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetAssociateOrganization",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Int64Value, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetLastSeedId = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Int64Value, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetLastSeedId",
        __Marshaller_google_protobuf_Int64Value,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetProxyAccountContract = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetProxyAccountContract",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetReceivingAccount = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetReceivingAccount",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Forest.Contracts.SymbolRegistrar.SeedsPriceInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetSeedsPrice = new aelf::Method<global::Forest.Contracts.SymbolRegistrar.SeedsPriceInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetSeedsPrice",
        __Marshaller_SeedsPriceInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Forest.Contracts.SymbolRegistrar.UniqueSeedsExternalPriceInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetUniqueSeedsExternalPrice = new aelf::Method<global::Forest.Contracts.SymbolRegistrar.UniqueSeedsExternalPriceInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetUniqueSeedsExternalPrice",
        __Marshaller_UniqueSeedsExternalPriceInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Forest.Contracts.SymbolRegistrar.AuctionConfig, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetAuctionConfig = new aelf::Method<global::Forest.Contracts.SymbolRegistrar.AuctionConfig, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetAuctionConfig",
        __Marshaller_AuctionConfig,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Forest.Contracts.SymbolRegistrar.AddSaleControllerInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddSaleController = new aelf::Method<global::Forest.Contracts.SymbolRegistrar.AddSaleControllerInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AddSaleController",
        __Marshaller_AddSaleControllerInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Forest.Contracts.SymbolRegistrar.RemoveSaleControllerInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveSaleController = new aelf::Method<global::Forest.Contracts.SymbolRegistrar.RemoveSaleControllerInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RemoveSaleController",
        __Marshaller_RemoveSaleControllerInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Forest.Contracts.SymbolRegistrar.SeedExpirationConfig, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetSeedExpirationConfig = new aelf::Method<global::Forest.Contracts.SymbolRegistrar.SeedExpirationConfig, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetSeedExpirationConfig",
        __Marshaller_SeedExpirationConfig,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetSeedImageUrlPrefix = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetSeedImageUrlPrefix",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Forest.Contracts.SymbolRegistrar.IssueChainList, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddIssueChain = new aelf::Method<global::Forest.Contracts.SymbolRegistrar.IssueChainList, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AddIssueChain",
        __Marshaller_IssueChainList,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Forest.Contracts.SymbolRegistrar.IssueChainList, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveIssueChain = new aelf::Method<global::Forest.Contracts.SymbolRegistrar.IssueChainList, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RemoveIssueChain",
        __Marshaller_IssueChainList,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetSeedRenewHashVerifyKey = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetSeedRenewHashVerifyKey",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_GetAssociateOrganization = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetAssociateOrganization",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Forest.Contracts.SymbolRegistrar.GetSeedsPriceOutput> __Method_GetSeedsPrice = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Forest.Contracts.SymbolRegistrar.GetSeedsPriceOutput>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSeedsPrice",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_GetSeedsPriceOutput);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Forest.Contracts.SymbolRegistrar.GetUniqueSeedsExternalPriceOutput> __Method_GetUniqueSeedsExternalPrice = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Forest.Contracts.SymbolRegistrar.GetUniqueSeedsExternalPriceOutput>(
        aelf::MethodType.View,
        __ServiceName,
        "GetUniqueSeedsExternalPrice",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_GetUniqueSeedsExternalPriceOutput);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Forest.Contracts.SymbolRegistrar.SpecialSeed> __Method_GetSpecialSeed = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Forest.Contracts.SymbolRegistrar.SpecialSeed>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSpecialSeed",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_SpecialSeed);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_GetAdministratorAddress = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetAdministratorAddress",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_GetReceivingAccountAddress = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetReceivingAccountAddress",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Forest.Contracts.SymbolRegistrar.SeedExpirationConfig> __Method_GetSeedExpirationConfig = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Forest.Contracts.SymbolRegistrar.SeedExpirationConfig>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSeedExpirationConfig",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_SeedExpirationConfig);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Forest.Contracts.SymbolRegistrar.AuctionConfig> __Method_GetAuctionConfig = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Forest.Contracts.SymbolRegistrar.AuctionConfig>(
        aelf::MethodType.View,
        __ServiceName,
        "GetAuctionConfig",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AuctionConfig);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Forest.Contracts.SymbolRegistrar.ControllerList> __Method_GetSaleController = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Forest.Contracts.SymbolRegistrar.ControllerList>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSaleController",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_ControllerList);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_GetProxyAccountContract = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetProxyAccountContract",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetLastSeedId = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetLastSeedId",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.StringValue> __Method_GetSeedImageUrlPrefix = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.StringValue>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSeedImageUrlPrefix",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_StringValue);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Forest.Contracts.SymbolRegistrar.IssueChainList> __Method_GetIssueChainList = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Forest.Contracts.SymbolRegistrar.IssueChainList>(
        aelf::MethodType.View,
        __ServiceName,
        "GetIssueChainList",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_IssueChainList);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Forest.Contracts.SymbolRegistrar.SymbolRegistrarContractReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Standards.ACS12.Acs12Reflection.Descriptor.Services[0],
          global::Forest.Contracts.SymbolRegistrar.SymbolRegistrarContractReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of SymbolRegistrarContract</summary>
    public abstract partial class SymbolRegistrarContractBase
    {
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Initialize(global::Forest.Contracts.SymbolRegistrar.InitializeInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty CreateSeed(global::Forest.Contracts.SymbolRegistrar.CreateSeedInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty Buy(global::Forest.Contracts.SymbolRegistrar.BuyInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty RegularSeedRenew(global::Forest.Contracts.SymbolRegistrar.RegularSeedRenewInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SpecialSeedRenew(global::Forest.Contracts.SymbolRegistrar.SpecialSeedRenewInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty BidFinishSeedRenew(global::Forest.Contracts.SymbolRegistrar.BidFinishSeedRenewInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddSpecialSeeds(global::Forest.Contracts.SymbolRegistrar.SpecialSeedList input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddUniqueSeeds(global::Forest.Contracts.SymbolRegistrar.UniqueSeedList input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveSpecialSeeds(global::Forest.Contracts.SymbolRegistrar.RemoveSpecialSeedInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetAdmin(global::AElf.Types.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetAssociateOrganization(global::AElf.Types.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetLastSeedId(global::Google.Protobuf.WellKnownTypes.Int64Value input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetProxyAccountContract(global::AElf.Types.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetReceivingAccount(global::AElf.Types.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetSeedsPrice(global::Forest.Contracts.SymbolRegistrar.SeedsPriceInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetUniqueSeedsExternalPrice(global::Forest.Contracts.SymbolRegistrar.UniqueSeedsExternalPriceInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetAuctionConfig(global::Forest.Contracts.SymbolRegistrar.AuctionConfig input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddSaleController(global::Forest.Contracts.SymbolRegistrar.AddSaleControllerInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveSaleController(global::Forest.Contracts.SymbolRegistrar.RemoveSaleControllerInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetSeedExpirationConfig(global::Forest.Contracts.SymbolRegistrar.SeedExpirationConfig input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetSeedImageUrlPrefix(global::Google.Protobuf.WellKnownTypes.StringValue input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddIssueChain(global::Forest.Contracts.SymbolRegistrar.IssueChainList input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveIssueChain(global::Forest.Contracts.SymbolRegistrar.IssueChainList input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetSeedRenewHashVerifyKey(global::Google.Protobuf.WellKnownTypes.StringValue input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Types.Address GetAssociateOrganization(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Forest.Contracts.SymbolRegistrar.GetSeedsPriceOutput GetSeedsPrice(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Forest.Contracts.SymbolRegistrar.GetUniqueSeedsExternalPriceOutput GetUniqueSeedsExternalPrice(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Forest.Contracts.SymbolRegistrar.SpecialSeed GetSpecialSeed(global::Google.Protobuf.WellKnownTypes.StringValue input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Types.Address GetAdministratorAddress(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Types.Address GetReceivingAccountAddress(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Forest.Contracts.SymbolRegistrar.SeedExpirationConfig GetSeedExpirationConfig(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Forest.Contracts.SymbolRegistrar.AuctionConfig GetAuctionConfig(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Forest.Contracts.SymbolRegistrar.ControllerList GetSaleController(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Types.Address GetProxyAccountContract(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetLastSeedId(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.StringValue GetSeedImageUrlPrefix(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Forest.Contracts.SymbolRegistrar.IssueChainList GetIssueChainList(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

    }

    public static aelf::ServerServiceDefinition BindService(SymbolRegistrarContractBase serviceImpl)
    {
      return aelf::ServerServiceDefinition.CreateBuilder()
          .AddDescriptors(Descriptors)
          .AddMethod(__Method_Initialize, serviceImpl.Initialize)
          .AddMethod(__Method_CreateSeed, serviceImpl.CreateSeed)
          .AddMethod(__Method_Buy, serviceImpl.Buy)
          .AddMethod(__Method_RegularSeedRenew, serviceImpl.RegularSeedRenew)
          .AddMethod(__Method_SpecialSeedRenew, serviceImpl.SpecialSeedRenew)
          .AddMethod(__Method_BidFinishSeedRenew, serviceImpl.BidFinishSeedRenew)
          .AddMethod(__Method_AddSpecialSeeds, serviceImpl.AddSpecialSeeds)
          .AddMethod(__Method_AddUniqueSeeds, serviceImpl.AddUniqueSeeds)
          .AddMethod(__Method_RemoveSpecialSeeds, serviceImpl.RemoveSpecialSeeds)
          .AddMethod(__Method_SetAdmin, serviceImpl.SetAdmin)
          .AddMethod(__Method_SetAssociateOrganization, serviceImpl.SetAssociateOrganization)
          .AddMethod(__Method_SetLastSeedId, serviceImpl.SetLastSeedId)
          .AddMethod(__Method_SetProxyAccountContract, serviceImpl.SetProxyAccountContract)
          .AddMethod(__Method_SetReceivingAccount, serviceImpl.SetReceivingAccount)
          .AddMethod(__Method_SetSeedsPrice, serviceImpl.SetSeedsPrice)
          .AddMethod(__Method_SetUniqueSeedsExternalPrice, serviceImpl.SetUniqueSeedsExternalPrice)
          .AddMethod(__Method_SetAuctionConfig, serviceImpl.SetAuctionConfig)
          .AddMethod(__Method_AddSaleController, serviceImpl.AddSaleController)
          .AddMethod(__Method_RemoveSaleController, serviceImpl.RemoveSaleController)
          .AddMethod(__Method_SetSeedExpirationConfig, serviceImpl.SetSeedExpirationConfig)
          .AddMethod(__Method_SetSeedImageUrlPrefix, serviceImpl.SetSeedImageUrlPrefix)
          .AddMethod(__Method_AddIssueChain, serviceImpl.AddIssueChain)
          .AddMethod(__Method_RemoveIssueChain, serviceImpl.RemoveIssueChain)
          .AddMethod(__Method_SetSeedRenewHashVerifyKey, serviceImpl.SetSeedRenewHashVerifyKey)
          .AddMethod(__Method_GetAssociateOrganization, serviceImpl.GetAssociateOrganization)
          .AddMethod(__Method_GetSeedsPrice, serviceImpl.GetSeedsPrice)
          .AddMethod(__Method_GetUniqueSeedsExternalPrice, serviceImpl.GetUniqueSeedsExternalPrice)
          .AddMethod(__Method_GetSpecialSeed, serviceImpl.GetSpecialSeed)
          .AddMethod(__Method_GetAdministratorAddress, serviceImpl.GetAdministratorAddress)
          .AddMethod(__Method_GetReceivingAccountAddress, serviceImpl.GetReceivingAccountAddress)
          .AddMethod(__Method_GetSeedExpirationConfig, serviceImpl.GetSeedExpirationConfig)
          .AddMethod(__Method_GetAuctionConfig, serviceImpl.GetAuctionConfig)
          .AddMethod(__Method_GetSaleController, serviceImpl.GetSaleController)
          .AddMethod(__Method_GetProxyAccountContract, serviceImpl.GetProxyAccountContract)
          .AddMethod(__Method_GetLastSeedId, serviceImpl.GetLastSeedId)
          .AddMethod(__Method_GetSeedImageUrlPrefix, serviceImpl.GetSeedImageUrlPrefix)
          .AddMethod(__Method_GetIssueChainList, serviceImpl.GetIssueChainList).Build();
    }

  }
}
#endregion

